// <auto-generated />
using System;
using HypothyroBot;
using HypothyroBot.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HypothyroBot.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220323152256_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresEnum(null, "drug_type", new[] { "none", "eutirox", "l_thyroxine", "another" })
                .HasPostgresEnum(null, "gender_type", new[] { "none", "male", "female", "unknown" })
                .HasPostgresEnum(null, "mode_type", new[] { "adding_user", "relevance_assessment", "set_reminder", "on_reminder", "limitation_checking", "results_collecting", "control", "user_data_correction" })
                .HasPostgresEnum(null, "pathology_type", new[] { "none", "nodular_non_toxic_goiter", "diffuse_toxic_goiter", "papillary_or_follicular_carcinoma", "medullary_carcinoma", "another" })
                .HasPostgresEnum(null, "thyroid_type", new[] { "none", "completely_removed", "half_removed", "isthmus_removed", "lobe_remainder_left", "unknown" })
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HypothyroBot.Models.Test", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("TestDate")
                        .HasColumnType("date");

                    b.Property<double>("TshLevel")
                        .HasColumnType("double precision");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("HypothyroBot.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateOfOperation")
                        .HasColumnType("date");

                    b.Property<GenderType>("Gender")
                        .HasColumnType("gender_type");

                    b.Property<ModeType>("Mode")
                        .HasColumnType("mode_type");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<PathologyType>("Pathology")
                        .HasColumnType("pathology_type");

                    b.Property<double>("PretreatmentDose")
                        .HasColumnType("double precision");

                    b.Property<DrugType>("PretreatmentDrug")
                        .HasColumnType("drug_type");

                    b.Property<ThyroidType>("ThyroidCondition")
                        .HasColumnType("thyroid_type");

                    b.Property<double>("TreatmentDose")
                        .HasColumnType("double precision");

                    b.Property<DrugType>("TreatmentDrug")
                        .HasColumnType("drug_type");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.Property<double>("checkinterval")
                        .HasColumnType("double precision");

                    b.Property<double>("lowTshLevel")
                        .HasColumnType("double precision");

                    b.Property<double>("upTshLevel")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HypothyroBot.Models.Test", b =>
                {
                    b.HasOne("HypothyroBot.Models.User", "User")
                        .WithMany("Tests")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HypothyroBot.Models.User", b =>
                {
                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
